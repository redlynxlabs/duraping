plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
    id 'me.modmuss50.mod-publish-plugin'
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    
    // ModMenu and Cloth Config for GUI configuration
    modImplementation "com.terraformersmc:modmenu:11.0.0"
    modImplementation "me.shedaniel.cloth:cloth-config-fabric:15.0.130"
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}

publishMods {
    file = tasks.remapJar.archiveFile
    changelog = providers.fileContents(layout.projectDirectory.file("../../CHANGELOG.md")).asText
    type = STABLE
    modLoaders.add("fabric")
    displayName = "DuraPing v${version}"
    
    // Enable dry run if API keys are missing (for local testing)
    dryRun = providers.environmentVariable("MODRINTH_TOKEN").getOrNull() == null
    
    // CurseForge Publishing
    curseforge {
        accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
        projectId = property("curseforge_id").toString()
        minecraftVersions.add(minecraft_version)
        
        // Dependencies
        requires {
            slug = "fabric-api"
        }
        requires {
            slug = "cloth-config"
        }
        optional {
            slug = "modmenu"
        }
    }
    
    // Modrinth Publishing
    modrinth {
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        projectId = property("modrinth_id").toString()
        minecraftVersions.add(minecraft_version)
        
        // Dependencies
        requires("fabric-api")
        requires("cloth-config")
        optional("modmenu")
    }
}